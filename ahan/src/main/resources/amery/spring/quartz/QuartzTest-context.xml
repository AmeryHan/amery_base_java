<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd


		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd

		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:property-placeholder location="classpath:amery/spring/quartz/default.properties"/>

    <task:executor id="poolTaskExecutor" rejection-policy="CALLER_RUNS" pool-size="30"/>

    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="autoStartup" value="false"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="taskExecutor" ref="poolTaskExecutor"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <property name="startupDelay" value="20"/>
        <property name="overwriteExistingJobs" value="false"/>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
                <prop key="org.quartz.scheduler.jmx.export">true</prop>
                <prop key="org.quartz.jobStore.isClustered">true</prop>
                <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
                <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
            </props>
        </property>
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
            </list>
        </property>
    </bean>

    <!--    数据库脚本在-->
    <!--    quartz-2.3.1\org\quartz\impl\jdbcjobstore\tables_mysql_innodb.sql-->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${batch.jdbc.driver}"/>
        <property name="url" value="${batch.jdbc.url}"/>
        <property name="username" value="${batch.jdbc.user}"/>
        <property name="password" value="${batch.jdbc.password}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" lazy-init="true">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="exampleJob" class="amery.spring.quartz.ExampleJob"/>
    <bean id="businessReport" class="amery.spring.quartz.BusinessReport"/>

    <!--    <bean name="reportTask" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->
    <!--        <property name="jobClass" value="amery.spring.quartz.BusinessReport" />-->
    <!--    </bean>  -->
    <bean id="reportTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 目标对象，指的是作业任务的实现类 -->
        <property name="targetObject" ref="exampleJob"/>
        <!-- 目标方法，指的是指定实现类中的哪个方法作为调度时的执行方法 -->
        <property name="targetMethod" value="execute"/>
        <!-- 是否并发 -->
        <property name="concurrent" value="false"/>
    </bean>

    <!--    <bean id="cronTrigger"  -->
    <!--        class="org.springframework.scheduling.quartz.CronTriggerBean">  -->
    <!--  -->
    <!--        指向我们的任务  -->
    <!--        <property name="jobDetail" ref="reportTask" />  -->
    <!--  -->
    <!--         每天下午16点50分到55分,每分钟运行一次  -->
    <!--        <property name="cronExpression" value="0 50-55 16 * * ?" />  -->
    <!--    </bean>-->

    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="reportTask"/>
        <!-- 延迟5秒开始 -->
        <property name="startDelay" value="5000"></property>
        <!-- 每3秒重复一次 -->
        <property name="repeatInterval" value="3000"></property>
    </bean>
</beans>
